[{"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\index.js":"1","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\App.js":"2","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\navbar.js":"3","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\musicplayer.js":"4","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\homepage.js":"5","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\login.js":"6","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\musiclist.js":"7","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\admin.js":"8","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\albums.js":"9","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\dock.js":"10","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\components\\MusicBtn.js":"11","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\components\\NavList.js":"12","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\components\\MusicList\\index.js":"13","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\components\\MusicList\\MusicItem.js":"14"},{"size":259,"mtime":1695450308742,"results":"15","hashOfConfig":"16"},{"size":895,"mtime":1695450308734,"results":"17","hashOfConfig":"16"},{"size":847,"mtime":1695456014413,"results":"18","hashOfConfig":"16"},{"size":4538,"mtime":1695450308744,"results":"19","hashOfConfig":"16"},{"size":599,"mtime":1695455951087,"results":"20","hashOfConfig":"16"},{"size":2672,"mtime":1695450308742,"results":"21","hashOfConfig":"16"},{"size":0,"mtime":1695450308743,"results":"22","hashOfConfig":"16"},{"size":19001,"mtime":1695451145072,"results":"23","hashOfConfig":"16"},{"size":7070,"mtime":1695794626738,"results":"24","hashOfConfig":"16"},{"size":377,"mtime":1695450308740,"results":"25","hashOfConfig":"16"},{"size":435,"mtime":1695450308737,"results":"26","hashOfConfig":"16"},{"size":547,"mtime":1695450308739,"results":"27","hashOfConfig":"16"},{"size":1015,"mtime":1695451633348,"results":"28","hashOfConfig":"16"},{"size":692,"mtime":1695450308738,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9fevfx",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\index.js",[],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\App.js",[],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\navbar.js",["73","74"],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\musicplayer.js",["75","76"],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\homepage.js",[],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\login.js",["77"],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\musiclist.js",[],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\admin.js",["78","79","80"],[],"import React, {useEffect, useState } from 'react';\r\nimport styles from './admin.module.css';\r\nimport Dropzone from 'react-dropzone';\r\nimport MusicList from './components/MusicList';\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Admin() {\r\n  const [selectedMusicId, setSelectedMusicId] = useState(null); \r\n  const [selectedMusicFile, setSelectedMusicFile] = useState(null); \r\n  const [selectedMusicName, setSelectedMusicName] = useState('');\r\n  const [selectedMusicTag, setSelectedMusicTag] = useState('');\r\n  const [selectedMusicPicture, setSelectedMusicPicture] = useState('');\r\n\r\n  const handleMusicClick = (musicId) => {\r\n    setSelectedMusicId(null);\r\n    setSelectedMusicFile(null);\r\n    setSelectedMusicName('');\r\n    setSelectedMusicTag('');\r\n    setSelectedMusicPicture('');\r\n\r\n    setSelectedMusicId(musicId);\r\n\r\n    const selectedMusic = backendData.find((music) => music._id === musicId);\r\n\r\n    if (selectedMusic) {\r\n      setSelectedMusicFile(selectedMusic.file);\r\n      setSelectedMusicName(selectedMusic.name || '');\r\n      setSelectedMusicTag(selectedMusic.tags || '');\r\n      setSelectedMusicPicture(selectedMusic.picture || '');\r\n    }\r\n  };\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [backendData, setBackendData] = useState({\r\n    data: [],\r\n    activeId: null,\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get('http://localhost:3300/musicPlayer')\r\n  //     .then((response) => {\r\n  //       console.log('Received data from backend:', response.data);\r\n  //       setBackendData(response.data);\r\n  //       setIsLoading(false);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error('Error fetching data from backend:', error);\r\n  //       setIsLoading(false);\r\n  //     });\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // 读取本地 JSON 文件\r\n    fetch('/music_therapy.music_info.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Received data from JSON file:', data);\r\n  \r\n        if (Array.isArray(data) && data.length > 0) {\r\n          console.log('First item _id:', data[0]._id);\r\n        } else {\r\n          console.log('No data or _id available.');\r\n        }\r\n  \r\n        setBackendData(data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data from JSON file:', error);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  const [uploadedFile, setUploadedFile] = useState(null);\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  // State for the music name input\r\n  const [musicName, setMusicName] = useState('');\r\n\r\n  const handleFileDrop = (acceptedFiles) => {\r\n    if (acceptedFiles.length > 0) {\r\n      // Set the uploaded file to the first accepted file.\r\n      setUploadedFile(acceptedFiles[0]);\r\n    }\r\n  };\r\n\r\n  const handleFileDelete = () => {\r\n    // Clear the uploaded file when the delete button is clicked.\r\n    setUploadedFile(null);\r\n  };\r\n\r\n  const handleImageUpload = (acceptedFiles) => {\r\n    if (acceptedFiles.length > 0) {\r\n      setUploadedImage(acceptedFiles[0]);\r\n    }\r\n  };\r\n\r\n  // State for toggle buttons\r\n  const [type1Active, setType1Active] = useState(false);\r\n  const [type2Active, setType2Active] = useState(false);\r\n  const [type3Active, setType3Active] = useState(false);\r\n  const [type4Active, setType4Active] = useState(false);\r\n  const [type5Active, setType5Active] = useState(false);\r\n  const [type6Active, setType6Active] = useState(false);\r\n\r\n  // Toggle button handlers\r\n  const toggleType1 = () => {\r\n    setType1Active(!type1Active);\r\n  };\r\n\r\n  const toggleType2 = () => {\r\n    setType2Active(!type2Active);\r\n  };\r\n\r\n  const toggleType3 = () => {\r\n    setType3Active(!type3Active);\r\n  };\r\n\r\n  const toggleType4 = () => {\r\n    setType4Active(!type4Active);\r\n  };\r\n\r\n  const toggleType5 = () => {\r\n    setType5Active(!type5Active);\r\n  };\r\n\r\n  const toggleType6 = () => {\r\n    setType6Active(!type6Active);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.admin}>\r\n      {/* left hand side */}\r\n      <div className={styles.container}>\r\n        <div className={styles.leftColumn}>\r\n          <div className={styles.leftContentContainer}>\r\n            <div className={styles.topContent}>\r\n              <div className={styles.topContentInner}>\r\n                {/* 3:2 split */}\r\n                <div className={styles.topContentTop}>\r\n                  {/* blank space */}\r\n                </div>\r\n                <div className={styles.topContentBottom}>\r\n                  <h1 className={styles.musicHeader}>\r\n                    Admin page\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.leftMainContent}>\r\n              <div className={styles.musicWrap}>\r\n                <main>\r\n                  <div className={styles.musicMainHead}>\r\n                    <div>Music Management</div>\r\n                    <div>Type</div>\r\n                    <div>Add+</div>\r\n                  </div>\r\n\r\n                  {isLoading ? (\r\n                    <h3 style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', marginTop: '2vh' }}>Loading...</h3>\r\n                  ) : (\r\n                    <MusicList musicData={backendData} onMusicClick={handleMusicClick} />\r\n                  )}\r\n                </main>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* right hand side */}\r\n        <div className={styles.rightColumn}>\r\n          <div className={styles.rightContentContainer}>\r\n            <div className={styles.rightTopContent}>\r\n              <div className={styles.topContentInner}>\r\n                {/* 3:2 Split */}\r\n                <div className={styles.topContentTop}>\r\n                  {/* blank space */}\r\n                </div>\r\n                <div className={styles.topContentBottom}>\r\n                  <h1\r\n                    style={{\r\n                    marginLeft: '4vh',\r\n                    color: 'gray'\r\n                  }}>Music Information</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.mainContent}>\r\n              <div className={styles.mainContentInner}>\r\n                {/* 3:1:1 拆分 */}\r\n                <div className={styles.mainContentTop}>\r\n                  {/* 上部分，占据3 */}\r\n                  <div className={styles.mainContentTopInner}>\r\n\r\n\r\n                    <div className={styles.mainContentTopPic}>\r\n                      {selectedMusicPicture ? (\r\n                        <img\r\n                            src={selectedMusicPicture}\r\n                            alt=\"Music Picture\"\r\n                            className={styles.uploadedImage}\r\n                          />\r\n                      ) : (\r\n                        // 显示上传图片的功能\r\n                        <Dropzone onDrop={handleImageUpload}>\r\n                          {({ getRootProps, getInputProps }) => (\r\n                            <div {...getRootProps()} className={styles.imageDropzone}>\r\n                              <input {...getInputProps()} />\r\n                              {uploadedImage ? (\r\n                                <img\r\n                                  src={URL.createObjectURL(uploadedImage)}\r\n                                  alt=\"Uploaded\"\r\n                                  className={styles.uploadedImage}\r\n                                />\r\n                              ) : (\r\n                                <p>+UPLOAD IMAGE+</p>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Dropzone>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className={styles.mainContentTopRight}>\r\n                      {/* 歌曲主要信息 */}\r\n                      <div className={styles.mainContentTopRightInner}>\r\n                        <div className={styles.mainContentTopRightAdd}>\r\n                          {/* Add Button */}\r\n                          <button className={styles.addButton}>Add</button>\r\n                        </div>\r\n                        \r\n\r\n                        <div className={styles.mainContentTopRightName}>\r\n                          {selectedMusicFile ? (\r\n                            <div \r\n                              style={{\r\n                                marginLeft: '2vh',\r\n                                marginRight: '2vh',\r\n                                marginTop: '2vh',\r\n                                marginBottom: '2vh',\r\n                                background: 'rgba(255, 255, 255, 0.8)',\r\n                                backdropFilter: 'blur(5px)',\r\n                                borderRadius: '5px',\r\n                                textAlign: 'center',\r\n                              }}>\r\n                              <h3 style={{ textAlign: 'center' }}>Music Name: {selectedMusicName}</h3>\r\n                              {/* <h4 style={{ textAlign: 'center' }}>{selectedMusicName}</h4> */}\r\n                            </div>\r\n                          ) : (\r\n                            // display uploaded music\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Enter Music Name\"\r\n                              value={musicName}\r\n                              onChange={(e) => setMusicName(e.target.value)}\r\n                              style={{ \r\n                                border: 'none', \r\n                                backgroundColor: '#F0F3F4', \r\n                                width: '35vh', height: '7vh',\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className={styles.mainContentTopRightType}>\r\n                          <div className={styles.mainContentTopRightTypeInner}>\r\n                            <div className={styles.mainContentTopRightTypeHeader}>\r\n                              <p>Type:</p>\r\n                            </div>\r\n                            <div className={styles.mainContentTopRightTypeRow}>\r\n                              {selectedMusicTag !== 'All' && (\r\n                                <button\r\n                                  onClick={toggleType1}\r\n                                  className={`${styles.typeButton1} ${type1Active ? styles.activeType1 : ''}`}\r\n                                  style={{ backgroundColor: selectedMusicTag === 'Vocal' ? 'green' : 'transparent' }}\r\n                                >\r\n                                  Vocal\r\n                                </button>\r\n                              )}\r\n                              {selectedMusicTag !== 'All' && (\r\n                                <button\r\n                                  onClick={toggleType2}\r\n                                  className={`${styles.typeButton2} ${type2Active ? styles.activeType2 : ''}`}\r\n                                  style={{ backgroundColor: selectedMusicTag === 'Ensembles' ? 'blue' : 'transparent' }}\r\n                                >\r\n                                  Ensembles\r\n                                </button>\r\n                              )}\r\n                              {selectedMusicTag !== 'All' && (\r\n                                <button\r\n                                  onClick={toggleType3}\r\n                                  className={`${styles.typeButton3} ${type3Active ? styles.activeType3 : ''}`}\r\n                                  style={{ backgroundColor: selectedMusicTag === 'Slow Soothing' ? 'blue' : 'transparent' }}\r\n                                >\r\n                                  Slow Soothing\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                            <div className={styles.mainContentTopRightTypeRow}>\r\n                              {selectedMusicTag !== 'All' && (\r\n                                <button\r\n                                  onClick={toggleType4}\r\n                                  className={`${styles.typeButton4} ${type4Active ? styles.activeType4 : ''}`}\r\n                                  style={{ backgroundColor: selectedMusicTag === 'Classical' ? 'blue' : 'transparent' }}\r\n                                >\r\n                                  Classical\r\n                                </button>\r\n                              )}\r\n                              {selectedMusicTag !== 'All' && (\r\n                                <button\r\n                                  onClick={toggleType5}\r\n                                  className={`${styles.typeButton5} ${type5Active ? styles.activeType5 : ''}`}\r\n                                  style={{ backgroundColor: selectedMusicTag === 'Rhythmic' ? 'blue' : 'transparent' }}\r\n                                >\r\n                                  Rhythmic\r\n                                </button>\r\n                              )}\r\n                              {selectedMusicTag !== 'All' && (\r\n                                <button\r\n                                  onClick={toggleType6}\r\n                                  className={`${styles.typeButton6} ${type6Active ? styles.activeType6 : ''}`}\r\n                                  style={{ backgroundColor: selectedMusicTag === 'Natural Sound' ? 'blue' : 'transparent' }}\r\n                                >\r\n                                  Natural Sound\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n{/* \r\n                        <div className={styles.mainContentTopRightType}>\r\n                          <div className={styles.mainContentTopRightTypeInner}>\r\n                            <div className={styles.mainContentTopRightTypeHeader}>\r\n                              <p>Type:</p>\r\n                            </div>\r\n                            <div className={styles.mainContentTopRightTypeRow}>\r\n                              <button\r\n                                onClick={toggleType1}\r\n                                className={`${styles.typeButton1} ${type1Active ? styles.activeType1 : ''}`}\r\n                              >\r\n                                Vocal\r\n                              </button>\r\n                              <button\r\n                                onClick={toggleType2}\r\n                                className={`${styles.typeButton2} ${type2Active ? styles.activeType2 : ''}`}\r\n                              >\r\n                                Ensembles\r\n                              </button>\r\n                              <button\r\n                                onClick={toggleType3}\r\n                                className={`${styles.typeButton3} ${type3Active ? styles.activeType3 : ''}`}\r\n                              >\r\n                                Slow Soothing\r\n                              </button>\r\n                            </div>\r\n                            <div className={styles.mainContentTopRightTypeRow}>\r\n                            <button\r\n                                onClick={toggleType4}\r\n                                className={`${styles.typeButton4} ${type4Active ? styles.activeType4 : ''}`}\r\n                              >\r\n                                Classical\r\n                              </button>\r\n                              <button\r\n                                onClick={toggleType5}\r\n                                className={`${styles.typeButton5} ${type5Active ? styles.activeType5 : ''}`}\r\n                              >\r\n                                Rhythmic\r\n                              </button>\r\n                              <button\r\n                                onClick={toggleType6}\r\n                                className={`${styles.typeButton6} ${type6Active ? styles.activeType6 : ''}`}\r\n                              >\r\n                                Natural Sound\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className={styles.mainContentMiddle}>\r\n                  {/* 中间部分，占据1 */}\r\n                  <div className={styles.dropzoneWrapper}> {/* 新增的包装 <div> */}\r\n                    {/* 上面的 division */}\r\n                    <div className={styles.topDivision}></div>\r\n                    \r\n                    {/* Dropzone */}\r\n                    <Dropzone onDrop={handleFileDrop} /*accept=\"audio/*\"*/>\r\n                      {({ getRootProps, getInputProps }) => (\r\n                        <div {...getRootProps()} className={styles.dropzone}>\r\n                          <input {...getInputProps()} />\r\n                          {uploadedFile ? (\r\n                            <div className={styles.uploadedFile}>\r\n                              {uploadedFile.name}\r\n                              <button\r\n                                className={styles.deleteButton}\r\n                                onClick={handleFileDelete}\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          ) : (\r\n                            <p>+UPLOAD MUSIC+</p>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </Dropzone>\r\n\r\n                    {/* 下面的 division */}\r\n                    <div className={styles.bottomDivision}></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.mainContentBottom}>\r\n\r\n                  <div key={selectedMusicFile} className={styles.audioContainerWrapper}>\r\n                    <div className={styles.audioContainer}>\r\n                      <h1 style={{ textAlign: 'center' }}>Audio Play</h1>\r\n                      {selectedMusicFile ? (\r\n                        <audio controls>\r\n                          <source src={`data:audio/mpeg;base64,${selectedMusicFile}`} type=\"audio/mpeg\" />\r\n                          Your browser does not support the audio element.\r\n                        </audio>\r\n                      ) : (\r\n                        <p>No audio selected.</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  {/* 下面的 division */}\r\n                  <div className={styles.bottomDivisionBottom}></div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\albums.js",["81"],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\dock.js",[],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\components\\MusicBtn.js",["82","83"],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\components\\NavList.js",[],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\components\\MusicList\\index.js",[],[],"Y:\\图片\\it\\0923\\IT_Project_022\\client\\src\\components\\MusicList\\MusicItem.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":12,"column":9,"nodeType":"86","endLine":12,"endColumn":42},{"ruleId":"84","severity":1,"message":"85","line":15,"column":9,"nodeType":"86","endLine":15,"endColumn":42},{"ruleId":"87","severity":1,"message":"88","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":12},{"ruleId":"87","severity":1,"message":"88","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"92","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"93","line":9,"column":10,"nodeType":"89","messageId":"90","endLine":9,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":205,"column":25,"nodeType":"86","endLine":209,"endColumn":29},{"ruleId":"87","severity":1,"message":"96","line":30,"column":15,"nodeType":"89","messageId":"90","endLine":30,"endColumn":29},{"ruleId":"87","severity":1,"message":"97","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":23},{"ruleId":"87","severity":1,"message":"98","line":1,"column":25,"nodeType":"89","messageId":"90","endLine":1,"endColumn":33},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Dock' is defined but never used.","'axios' is defined but never used.","'selectedMusicId' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'scrollPosition' is assigned a value but never used.","'useRef' is defined but never used.","'useState' is defined but never used."]