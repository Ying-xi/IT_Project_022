[{"/Users/yingxi/Desktop/IT_Project_022/client/src/index.js":"1","/Users/yingxi/Desktop/IT_Project_022/client/src/App.js":"2","/Users/yingxi/Desktop/IT_Project_022/client/src/musicplayer.js":"3","/Users/yingxi/Desktop/IT_Project_022/client/src/navbar.js":"4","/Users/yingxi/Desktop/IT_Project_022/client/src/homepage.js":"5","/Users/yingxi/Desktop/IT_Project_022/client/src/dock.js":"6","/Users/yingxi/Desktop/IT_Project_022/client/src/components/NavList.js":"7","/Users/yingxi/Desktop/IT_Project_022/client/src/components/MusicBtn.js":"8","/Users/yingxi/Desktop/IT_Project_022/client/src/login.js":"9","/Users/yingxi/Desktop/IT_Project_022/client/src/admin.js":"10","/Users/yingxi/Desktop/IT_Project_022/client/src/albums.js":"11","/Users/yingxi/Desktop/IT_Project_022/client/src/components/MusicList/index.js":"12","/Users/yingxi/Desktop/IT_Project_022/client/src/components/MusicList/MusicItem.js":"13"},{"size":248,"mtime":1694764495595,"results":"14","hashOfConfig":"15"},{"size":768,"mtime":1694764495578,"results":"16","hashOfConfig":"15"},{"size":4695,"mtime":1694931143457,"results":"17","hashOfConfig":"15"},{"size":419,"mtime":1695026175577,"results":"18","hashOfConfig":"15"},{"size":532,"mtime":1694844557351,"results":"19","hashOfConfig":"15"},{"size":361,"mtime":1694764495593,"results":"20","hashOfConfig":"15"},{"size":458,"mtime":1694928284996,"results":"21","hashOfConfig":"15"},{"size":412,"mtime":1695052684832,"results":"22","hashOfConfig":"15"},{"size":2626,"mtime":1695026175577,"results":"23","hashOfConfig":"15"},{"size":11642,"mtime":1695094191697,"results":"24","hashOfConfig":"15"},{"size":4056,"mtime":1695026166592,"results":"25","hashOfConfig":"15"},{"size":1086,"mtime":1695039259250,"results":"26","hashOfConfig":"15"},{"size":444,"mtime":1695039259250,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"hjunzl",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"31"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yingxi/Desktop/IT_Project_022/client/src/index.js",[],[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/App.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/musicplayer.js",["74","75"],[],"import {Link} from 'react-router-dom'\nimport Dock from './dock'\nimport './musicplayer.css'\nimport React, {useEffect, useMemo, useRef, useState} from 'react'\nimport MusicBtn from './components/MusicBtn'\nimport NavList from './components/NavList'\nimport axios from 'axios'\n\nfunction MusicPlayer() {\n  const myAudio = useRef(null)\n  const audioSource = useRef(null)\n  const [isPlaying,\n    setIsPlaying] = useState(false)\n\n  const [backendData, setBackendData] = useState({\n    data: [], // backend data\n    activeId: null, // Actived music id\n  });\n\n  // Connect FE & BE Server\n  useEffect(() => {\n    axios\n      .get('http://localhost:3300/musicPlayer')\n      .then(response => {\n        console.log('Received from backend:', response.data);\n        setBackendData(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching data from backend:', error);\n      });\n  }, []);\n\n\n\n\n  /**\n   * play song\n   * @param songPath\n   */\n\n  const playSong = (id) => {\n    const activeMusic = backendData?.data.find((item) => item._id === id);\n  \n    if (activeMusic) {\n      // pause the current music\n      myAudio.current.pause();\n  \n      const audioSourcePath = `data:audio/mpeg;base64,${activeMusic.file}`;\n  \n      audioSource.current.src = audioSourcePath;\n      myAudio.current.load();\n      myAudio.current.play();\n      setIsPlaying(true);\n  \n      setBackendData((prevData) => ({\n        ...prevData,\n        activeId: id,\n      }));\n    }\n  \n    // Update musicList state\n    const newList = backendData?.data.map((item) => {\n      item.active = item._id === id;\n      return item;\n    });\n  \n    // Update backendData\n    if (backendData) {\n      setBackendData({\n        ...backendData,\n        data: newList,\n      });\n    }\n  };\n\n  const activeMusic = useMemo(\n    () => backendData?.data.find((item) => item._id === backendData.activeId) ?? '',\n    [backendData]\n  );\n\n\n  /**\n   * Stop song\n   */\n  const stopSong = () => {\n    myAudio\n      .current\n      .pause()\n    setIsPlaying(false)\n  }\n\n  /**\n   * Start song\n   */\n  const startSong = () => {\n    myAudio\n      .current\n      .play()\n    setIsPlaying(true)\n  }\n\n\n  const allTags = useMemo(() => {\n    const tagsArray = backendData?.data.flatMap((musicItem) => musicItem.tags) || [];\n    return [...new Set(tagsArray)];\n  }, [backendData]);\n\n  const [activeCategory,\n    setActiveCategory] = useState(null)\n  const handleCategoryChange = (category) => {\n    setActiveCategory(category)\n  }\n\n  return (\n    <div className='music-player'>\n      <div className='music-player-wrap'>\n        <div className='navbar-placeholder'/>\n        <audio id='myAudio' ref={myAudio}>\n          <source id='audioSource' ref={audioSource} src='' type='audio/mpeg'/>\n        </audio>\n\n        <div className='size-container relative'>\n          {/* <NavList></NavList> */}\n          <NavList\n            activeCategory={activeCategory}\n            onCategoryClick={handleCategoryChange}\n            allTags={allTags}\n          />\n\n          <form className='search-container' action='/url' method='get'>\n            {/* <img src={\"../public/navbar-bg.jpg\"} alt=\"\" className=\"w-25px\" /> */}\n            <input className='search-inp' type='text' placeholder='Search your music'/>\n            <button type='submit' className='search-btn'>\n              Search\n            </button>\n          </form>\n        </div>\n\n        <div className='button-container music-btns-list'>\n          {backendData && backendData.data ? (\n            backendData.data\n              .filter((item) => !activeCategory || item.tags.includes(activeCategory))\n              .map((item) => (\n                <MusicBtn\n                  onClick={() => playSong(item._id)}\n                  key={item._id}\n                  face={`data:image/jpeg;base64,${item.picture}`}\n                  name={item.name}\n                />\n              ))\n          ) : (\n            <div>Loading...</div>\n          )}\n        </div>\n\n        <div className='dock-background'>\n          <div className='dock-buttons'>\n            <div className='dock-text'>üéµ {activeMusic?.name ?? 'music'}</div>\n            {isPlaying\n              ? (\n                <div className='dock-button toggle-play' onClick={stopSong}>\n                  ‚è∏Ô∏è\n                </div>\n              )\n              : (\n                <div\n                  className='dock-button toggle-play'\n                  onClick={() => startSong(activeMusic.song)}>\n                  ‚ñ∂Ô∏è\n                </div>\n              )}\n            {/* <div className=\"dock-button toggle-volume\">üîä</div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MusicPlayer\n","/Users/yingxi/Desktop/IT_Project_022/client/src/navbar.js",["76"],[],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './navbar.css'\n\nfunction Navbar () {\n  return (\n    <div className='navbar'>\n      <div className='nav-links'>\n        <Link to='/' className='nav-link'>üéµ Home</Link>\n        <a href='#' className='nav-link'>‚öô Setting</a>\n        <Link to='/login' className='nav-link'>üë§ Log in</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar\n","/Users/yingxi/Desktop/IT_Project_022/client/src/homepage.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/dock.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/components/NavList.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/components/MusicBtn.js",["77","78"],[],"import React, { useRef, useState } from 'react'\nimport './musicBtn.css'\n\nconst MusicBtn = (props) => {\n  const face = process.env.PUBLIC_URL + props.face\n\n  return (\n    <div className={`button music-btn-wrap ${props.color}`} onClick={props.onClick}>\n      <img src={face} alt='Èü≥‰πêÊåâÈíÆ' className='img-face' />\n      <p className='music-item-text'>{props.name}</p>\n    </div>\n  )\n}\n\nexport default MusicBtn\n","/Users/yingxi/Desktop/IT_Project_022/client/src/login.js",["79"],[],"import React, { useState } from 'react';\nimport './login.css';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom'; // ÂØºÂÖ• Link Âíå useNavigate\n\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleLogin = async () => {\n    try {\n      const userData = {\n        username: username,\n        password: password,\n      };\n      console.log('Sending login request with data:', userData);\n      const response = await axios.post('http://localhost:3300/login', userData);\n      console.log('Received response:', response);\n      const jwtToken = response.data.data;\n      console.log('JWT token received:', jwtToken);\n      // Â∞Ü JWT Â≠òÂÇ®Âú®Êú¨Âú∞Â≠òÂÇ®‰∏≠\n      localStorage.setItem('token', jwtToken);\n      console.log('Login successful. Navigating to admin page...');\n      // ÁôªÂΩïÊàêÂäüÂêéÔºå‰ΩøÁî®ÂØºËà™ÂáΩÊï∞Ë∑≥ËΩ¨Âà∞ admin È°µÈù¢\n      navigate('/admin');\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  return (\n    <div className='login'>\n      <div className='content'>\n        <div className='login-wrapper'>\n          <div className='left-wrapper'>\n            <div className='glass'>\n              <div className='titles'>\n                <h1 className='skoog'>Skoog</h1>\n                <span className='banner'>Join us!</span>\n              </div>\n            </div>\n          </div>\n          <div className='right-wrapper'>\n            <div className='form-wrapper'>\n              <h1 className='login'>Login</h1>\n              <div className='input-elems'>\n                <span className='name'>Username</span>\n                <input\n                  type='text'\n                  className='input'\n                  value={username}\n                  onChange={handleUsernameChange}\n                />\n              </div>\n              <div className='input-elems'>\n                <span className='name'>Password</span>\n                <input\n                  type='password'\n                  className='input'\n                  value={password}\n                  onChange={handlePasswordChange}\n                />\n              </div>\n              <button className=\"button\" onClick={handleLogin}>\n                LOGIN\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/yingxi/Desktop/IT_Project_022/client/src/admin.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/albums.js",["80"],[],"import React, { Component } from 'react';\nimport './albums.css';\n\nclass Albums extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItemIndex: 0,\n            backgroundImage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll = () => {\n        const itemElements = document.querySelectorAll('.item');\n        const windowHeight = window.innerHeight;\n        const scrollPosition = window.scrollY;\n\n        itemElements.forEach((item, index) => {\n            const rect = item.getBoundingClientRect();\n\n            const itemCenter = rect.top + (rect.height * 0.5);\n\n            if (itemCenter > windowHeight * 0.4 && itemCenter < windowHeight * 0.75) {\n                this.setState({ activeItemIndex: index });\n\n                // set the image of the item now to be the background\n                const imgElement = item.querySelector('.img');\n                if (imgElement) {\n                    const imageUrl = imgElement.getAttribute('src');\n                    this.setState({ backgroundImage: `url(${imageUrl})` });\n                }\n            }\n        });\n    };\n\n    render() {\n        const musicItems = [\n            {\n                type: 'Realxing Music',\n                title: 'Name',\n                imageUrl: '/albums/album1.jpg',\n                description:\n                    'Relaxing music often incorporates natural sounds like flowing water, birdsong, or ocean waves, enhancing the overall calming effect.',\n            },\n            {\n                type: 'White noise',\n                title: 'Name',\n                imageUrl: '/albums/album2.jpg',\n                description:\n                    'White noise is often used for its ability to mask other sounds, aiding in concentration, relaxation, or sleep by creating a consistent background noise.',\n            },\n            {\n                type: 'Jazz Music',\n                title: 'Name',\n                imageUrl: '/albums/album3.jpg',\n                description:\n                    \"Jazz music's ability to blend diverse influences from different cultures and styles creates a rich tapestry of sound.\",\n            },\n            {\n                type: 'Classic Music',\n                title: 'Name',\n                imageUrl: '/albums/album4.jpg',\n                description:\n                    'Classical music is a timeless genre known for its complexity, emotional depth, and intricate compositions, often performed by orchestras and chamber ensembles.',\n            },\n        ];\n\n        return (\n            <div className=\"shell\" id=\"shell\" style={{ backgroundImage: this.state.backgroundImage }}>\n                <div className=\"header\">\n                    <h2 className=\"title\">Albums</h2>\n                    <h3 className=\"subtitle\">click album cover <br /> to continue</h3>\n                </div>\n                <div className=\"musiclist\">\n                    {musicItems.map((item, index) => (\n                        <div\n                            key={index}\n                            className={`item ${this.state.activeItemIndex === index ? 'item--active' : ''\n                                }`}\n                            data-text={item.type}\n                        >\n                            <div className=\"content\">\n                                <a href=\"https://example.com\">\n                                    <img className=\"img\" src={item.imageUrl} alt={item.type} />\n                                </a>\n                                <h2 className=\"content-title\">{item.title}</h2>\n                                <p className=\"content-desc\">{item.description}</p>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Albums;\n","/Users/yingxi/Desktop/IT_Project_022/client/src/components/MusicList/index.js",["81"],[],"import React, { useState } from 'react';\nimport style from './index.module.css';\nimport MusicItem from './MusicItem';\n\nconst MusicList = () => {\n  const [musicInfo, setMusicInfo] = useState([\n    {\n      id: 1,\n      name: 'Music1',\n      types: ['type'],\n    },\n    {\n      id: 2,\n      name: 'Music2',\n      types: ['type'],\n    },\n    {\n      id: 3,\n      name: 'Music3',\n      types: ['type'],\n    },\n    {\n      id: 4,\n      name: 'Music4',\n      types: ['type'],\n    },\n    {\n      id: 5,\n      name: 'Music5',\n      types: ['type'],\n    },\n  ]);\n\n  return (\n    <div className={style['music-wrap']}>\n      <header className={style['music-header']}>Admin page</header>\n      <main>\n        {/* Ê†áÂ§¥ */}\n        <div className={style['music-main-head']}>\n          <div>Music Management</div>\n          <div>Type</div>\n          <div>Add+</div>\n        </div>\n\n        {/* ÂàóË°®È°π */}\n        {musicInfo.map((musicInfoItem) => {\n          return <MusicItem info={musicInfoItem} key={musicInfoItem.id} />;\n        })}\n      </main>\n    </div>\n  );\n};\n\nexport default MusicList;\n","/Users/yingxi/Desktop/IT_Project_022/client/src/components/MusicList/MusicItem.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":1,"column":9,"nodeType":"84","messageId":"85","endLine":1,"endColumn":13},{"ruleId":"82","severity":1,"message":"86","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":12},{"ruleId":"87","severity":1,"message":"88","line":10,"column":9,"nodeType":"89","endLine":10,"endColumn":42},{"ruleId":"82","severity":1,"message":"90","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":23},{"ruleId":"82","severity":1,"message":"91","line":1,"column":25,"nodeType":"84","messageId":"85","endLine":1,"endColumn":33},{"ruleId":"82","severity":1,"message":"83","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":14},{"ruleId":"82","severity":1,"message":"92","line":25,"column":15,"nodeType":"84","messageId":"85","endLine":25,"endColumn":29},{"ruleId":"82","severity":1,"message":"93","line":6,"column":21,"nodeType":"84","messageId":"85","endLine":6,"endColumn":33},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Dock' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","'useState' is defined but never used.","'scrollPosition' is assigned a value but never used.","'setMusicInfo' is assigned a value but never used."]