[{"/Users/yingxi/Desktop/IT_Project_022/client/src/index.js":"1","/Users/yingxi/Desktop/IT_Project_022/client/src/App.js":"2","/Users/yingxi/Desktop/IT_Project_022/client/src/musicplayer.js":"3","/Users/yingxi/Desktop/IT_Project_022/client/src/navbar.js":"4","/Users/yingxi/Desktop/IT_Project_022/client/src/homepage.js":"5","/Users/yingxi/Desktop/IT_Project_022/client/src/dock.js":"6","/Users/yingxi/Desktop/IT_Project_022/client/src/components/NavList.js":"7","/Users/yingxi/Desktop/IT_Project_022/client/src/components/MusicBtn.js":"8"},{"size":248,"mtime":1694097971788,"results":"9","hashOfConfig":"10"},{"size":520,"mtime":1694097971781,"results":"11","hashOfConfig":"10"},{"size":5262,"mtime":1694099496145,"results":"12","hashOfConfig":"10"},{"size":414,"mtime":1694097971790,"results":"13","hashOfConfig":"10"},{"size":532,"mtime":1694097971787,"results":"14","hashOfConfig":"10"},{"size":361,"mtime":1694097971786,"results":"15","hashOfConfig":"10"},{"size":520,"mtime":1694097971783,"results":"16","hashOfConfig":"10"},{"size":403,"mtime":1694097971782,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"hjunzl",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"/Users/yingxi/Desktop/IT_Project_022/client/src/index.js",[],[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/App.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/musicplayer.js",["46","47"],[],"import { Link } from 'react-router-dom';\nimport Dock from './dock';\nimport './musicplayer.css';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport MusicBtn from './components/MusicBtn';\nimport NavList from './components/NavList';\n\n\nimport axios from 'axios';\n\nfunction MusicPlayer() {\n  const myAudio = useRef(null);\n  const audioSource = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    // 发起GET请求来获取后端的文本消息\n    axios.get('http://localhost:3300/musicPlayer') // 替换为实际的后端API端点\n      .then(response => {\n        console.log('Received from backend:', response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching data from backend:', error);\n      });\n  }, []);\n\n  const [musicList, setMusicList] = useState([\n    {\n      id: 1,\n      face: '/musicFace/AuldLangSyne.jpg',\n      song: 'songs/AuldLangSyne.mp3',\n      name: 'Auld Lang Syne',\n      active: false,\n      tags: ['All', 'Ensembles'],\n    },\n    {\n      id: 2,\n      face: '/musicFace/Bleu.jpg',\n      song: 'songs/Bleu.mp3',\n      name: 'Bleu',\n      active: false,\n      tags: ['All', 'Rhythmic'],\n    },\n    {\n      id: 3,\n      face: '/musicFace/CanonInD.jpg',\n      song: 'songs/CanonInD.mp3',\n      name: 'Canon In D',\n      active: false,\n      tags: ['All', 'Classical'],\n    },\n    {\n      id: 4,\n      face: '/musicFace/RelaxingRain.jpg',\n      song: 'songs/RelaxingRain.mp3',\n      name: 'Relaxing Rain',\n      active: false,\n      tags: ['All', 'Natural Sound'],\n    },\n    {\n      id: 5,\n      face: '/musicFace/VocaliseOp34No14.jpg',\n      song: 'songs/VocaliseOp34No14.mp3',\n      name: 'Vocalise, Op34, No.14',\n      active: false,\n      tags: ['All', 'Vocal'],\n    },\n    {\n      id: 6,\n      face: '/musicFace/WhatMakesYouBeautiful.jpg',\n      song: 'songs/WhatMakesYouBeautiful.mp3',\n      name: 'What Makes You Beautiful',\n      active: false,\n      tags: ['All', 'Pop'],\n    },\n    {\n      id: 7,\n      face: '/musicFace/WinterBokeh.jpg',\n      song: 'songs/WinterBokeh.mp3',\n      name: 'Winter Bokeh',\n      active: false,\n      tags: ['All', 'Slow Smoothing'],\n    },\n  ]);\n\n  const activeMusic = useMemo(() => musicList.find((item) => item.active) ?? '', [musicList]);\n\n  /**\n   * play song\n   * @param songPath \n   */\n  const playSong = (id) => {\n    const activeMusic = musicList.find((item) => item.id === id) ?? '';\n\n    const publicPath = process.env.PUBLIC_URL;\n    const audioSourcePath = `${publicPath}/${activeMusic.song}`;\n\n    audioSource.current.src = audioSourcePath;\n    myAudio.current.load();\n    myAudio.current.play();\n    setIsPlaying(true);\n\n    const newList = musicList.map((item) => {\n      item.active = item.id === id;\n      return item;\n    });\n    setMusicList(newList);\n    return;\n  };\n\n  /**\n   * Stop song\n   */\n  const stopSong = () => {\n    myAudio.current.pause();\n    setIsPlaying(false);\n  };\n\n  /**\n   * Start song\n   */\n  const startSong = () => {\n    myAudio.current.play();\n    setIsPlaying(true);\n  };\n\n  const allTags = [...new Set(musicList.flatMap((musicItem) => musicItem.tags))];\n  const [activeCategory, setActiveCategory] = useState(null); // 1. 创建筛选条件状态\n  // 3. 处理筛选条件变化的函数\n  const handleCategoryChange = (category) => {\n    setActiveCategory(category);\n  };\n\n  return (\n    <div className=\"music-player-wrap\">\n      <div className=\"navbar-placeholder\" />\n      <audio id=\"myAudio\" ref={myAudio}>\n        <source id=\"audioSource\" ref={audioSource} src=\"\" type=\"audio/mpeg\" />\n      </audio>\n\n      <div className=\"size-container relative\">\n        {/* <NavList></NavList> */}\n        <NavList\n          activeCategory={activeCategory}\n          onCategoryClick={handleCategoryChange}\n          allTags={allTags}\n        />\n\n\n        <form className=\"search-container\" action=\"/url\" method=\"get\">\n          {/* <img src={\"../public/navbar-bg.jpg\"} alt=\"\" className=\"w-25px\" /> */}\n          <input className=\"search-inp\" type=\"text\" placeholder=\"Search your music\" />\n          <button type=\"submit\" className=\"search-btn\">\n            Search\n          </button>\n        </form>\n      </div>\n\n      <div className=\"button-container music-btns-list\">\n        {musicList\n          .filter((musicItem) => !activeCategory || musicItem.tags.includes(activeCategory))\n          .map((musicItem) => (\n            <MusicBtn\n              onClick={() => playSong(musicItem.id)}\n              key={musicItem.id}\n              face={musicItem.face}\n              name={musicItem.name}\n            />\n          ))}\n      </div>\n\n\n      <div className=\"dock-background\">\n        <div className=\"dock-buttons\">\n          <div className=\"dock-text\">🎵 {activeMusic?.name ?? 'music'}</div>\n          {isPlaying ? (\n            <div className=\"dock-button toggle-play\" onClick={stopSong}>\n              ⏸️\n            </div>\n          ) : (\n            <div className=\"dock-button toggle-play\" onClick={() => startSong(activeMusic.song)}>\n              ▶️\n            </div>\n          )}\n          {/* <div className=\"dock-button toggle-volume\">🔊</div> */}\n        </div>\n      </div>\n\n      {/* <Dock /> */}\n    </div>\n  );\n}\n\nexport default MusicPlayer;\n","/Users/yingxi/Desktop/IT_Project_022/client/src/navbar.js",["48","49"],[],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './navbar.css'\n\nfunction Navbar () {\n  return (\n    <div className='navbar'>\n      <div className='nav-links'>\n        <Link to='/' className='nav-link'>🎵 Home</Link>\n        <a href='#' className='nav-link'>⚙ Setting</a>\n        <a href='#' className='nav-link'>👤 Contact us</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar\n","/Users/yingxi/Desktop/IT_Project_022/client/src/homepage.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/dock.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/components/NavList.js",[],[],"/Users/yingxi/Desktop/IT_Project_022/client/src/components/MusicBtn.js",["50","51"],[],"import React, { useRef, useState } from 'react';\nimport './musicBtn.css';\n\nconst MusicBtn = (props) => {\n  const face = process.env.PUBLIC_URL + props.face;\n\n  return (\n    <div className=\"button music-btn-wrap\" onClick={props.onClick}>\n      <img src={face} alt=\"音乐按钮\" className={`img-face`} />\n      <p className=\"music-item-text\">{props.name}</p>\n    </div>\n  );\n};\n\nexport default MusicBtn;\n",{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":14},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"58","line":10,"column":9,"nodeType":"59","endLine":10,"endColumn":42},{"ruleId":"57","severity":1,"message":"58","line":11,"column":9,"nodeType":"59","endLine":11,"endColumn":42},{"ruleId":"52","severity":1,"message":"60","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":23},{"ruleId":"52","severity":1,"message":"61","line":1,"column":25,"nodeType":"54","messageId":"55","endLine":1,"endColumn":33},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Dock' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","'useState' is defined but never used."]